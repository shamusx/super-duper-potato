---
- name: "Wait for the portal to become active"
  uri:
    url: "https://{{ inventory_hostname }}/api/initial-data"
    validate_certs: no
    status_code: 200
  register: result
  until: result.status == 200
  retries: 300
  delay: 10

- name: Refresh in-memory inventory
  meta: refresh_inventory

- name: Prepare Avi credentials
  set_fact:
    avi_credentials: {}

- name: Prepare Avi credentials
  set_fact:
    avi_credentials: "{{ avi_credentials | combine({ item.key: item.value }) }}"
  with_items:
  - { key: 'password', value: "{{ hostvars['jumpbox.student.lab']['Lab_avi_admin_password'] }}" }
  - { key: 'api_version', value: "{{ result['json']['version']['Version'] }}" }
  - { key: 'controller', value: "{{ avi_creds['controller'] }}" }
  - { key: 'username', value: "{{ avi_creds['username'] }}" }

- name: Update admin user account if required
  avi_useraccount:
    avi_credentials: "{{ avi_credentials }}"
    old_password: "{{ hostvars['jumpbox.student.lab']['Lab_avi_default_password'] }}"
  ignore_errors: yes

- name: Basic system configuration
  avi_systemconfiguration:
    avi_credentials: "{{ avi_credentials }}"
    welcome_workflow_complete: true
    dns_configuration:
      server_list:
        - addr: "{{ hostvars['jumpbox.student.lab']['privateIp'] }}"
          type: V4
        - addr: 8.8.4.4
          type: V4
    ntp_configuration:
      ntp_server_list:
        - addr: 0.pool.ntp.org
          type: DNS
        - addr: 1.pool.ntp.org
          type: DNS
        - addr: 2.pool.ntp.org
          type: DNS
        - addr: 3.pool.ntp.org
          type: DNS

- name: Create backup admin account
  avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    http_method: post
    path: user
    data:
      require_password_confirmation: false
      is_active: true
      is_superuser: true
      access:
        - tenant_ref: '/api/tenant?name=admin'
          role_ref: '/api/role?name=System-Admin'
      default_tenant_ref: '/api/tenant?name=admin'
      name: "{{ hostvars['jumpbox.student.lab']['Lab_avi_backup_admin_username'] }}"
      username: "{{ hostvars['jumpbox.student.lab']['Lab_avi_backup_admin_username'] }}"
      password: "{{ hostvars['jumpbox.student.lab']['Lab_avi_backup_admin_password'] }}"

- name: Define Azure cloud configuration
  avi_cloud:
    avi_credentials: "{{ avi_credentials }}"
    name: AZURE
    vtype: CLOUD_AZURE
    azure_configuration:
      resource_group: "{{ hostvars['jumpbox.student.lab']['resourceGroupName'] }}"
      subscription_id: "{{ hostvars['jumpbox.student.lab']['Lab_subscription_id'] }}"
      location: "{{ hostvars['jumpbox.student.lab']['location'] }}" 
      network_info:
        - virtual_network_id: "{{ hostvars['jumpbox.student.lab']['Lab_vnet_id'] }}"  
          se_network_id: "{{ hostvars['jumpbox.student.lab']['Lab_avi_management_network'] }}"
    custom_tags:
      - tag_val: "{{ hostvars['jumpbox.student.lab']['Owner'] }}"
        tag_key: Owner
      - tag_val: "{{ hostvars['jumpbox.student.lab']['Lab_Timezone'] }}"
        tag_key: Lab_Timezone
  register: cloud

- name: Update SEG Default-Group
  avi_serviceenginegroup:
    avi_credentials: "{{ avi_credentials }}"
    cloud_ref: "/api/cloud?name=AZURE"
    name: Default-Group
    se_name_prefix: "{{ inventory_hostname.split('.')[1] }}"

- name: Update the backup passphrase
  avi_backupconfiguration:
    avi_credentials: "{{ avi_credentials }}"
    name: Backup-Configuration
    backup_passphrase: "{{ avi_credentials.password }}"
    save_local: true

- name: Build VIP network details
  avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    http_method: get
    path: "networksubnetlist?name={{ item }}&cloud_uuid={{ cloud['obj']['uuid'] }}"
  register: subnet
  with_items:
    - "{{ hostvars['jumpbox.student.lab']['Lab_avi_vip_network'] }}"

- name: Define DNS Virtual Service
  import_role:
    name: avinetworks.aviconfig
  vars:
    avi_credentials: "{{ avi_credentials }}"
    avi_config:
      vsvip:
        - name: vsvip_dns
          cloud_ref: '/api/cloud?name=AZURE'
          vip:
            - auto_allocate_ip: true
              subnet_uuid: "{{ subnet['results'][0]['obj']['results'][0]['uuid'] }}"
              auto_allocate_floating_ip: true
      virtualservice:
        - name: "{{ 'vs_dns_' + hostvars['jumpbox.student.lab']['location'] }}"
          cloud_ref: '/api/cloud?name=AZURE'
          application_profile_ref: '/api/applicationprofile?name=System-DNS'
          network_profile_ref: '/api/networkprofile/?name=System-UDP-Per-Pkt'
          services:
            - port: 53
            - port: 53
              override_network_profile_ref: '/api/networkprofile/?name=System-TCP-Proxy'
          vsvip_ref: '/api/vsvip?name=vsvip_dns'

- name: Build DNS VIP network details
  avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    http_method: get
    path: "virtualservice?include_name&services.0.port=53"
  register: dns_vip

- set_fact:
    student_id: "{{ inventory_hostname | regex_replace('^controller.student(\\d+).lab', '\\1') }}"
    student_domain: "{{ inventory_hostname | regex_replace('controller.','') }}"
    dns_vs_ip: "{{ dns_vip['obj']['results'][0]['vip'][0]['ip_address']['addr'] }}"

- group_by:
    key: "{{ student_id }}"
- group_by:
    key: "{{ student_domain }}"
- group_by:
    key: "{{ dns_vs_ip }}"

- debug:
    var: hostvars[inventory_hostname]['dns_vs_ip']